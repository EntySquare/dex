# ==================================================
# DEX API V1 - Pure GraphQL Configuration
# ==================================================
# This is the pure GraphQL configuration for DEX API V1
# 
# Major changes in V1:
# 1. Removed all database dependencies
# 2. Pure GraphQL architecture using subgraph as single source of truth
# 3. Simplified cron jobs for monitoring and metrics
# 4. Streamlined authentication without database
# 5. All data aggregated from blockchain via GraphQL
#
# Setup Instructions:
# 1. Copy this file to wrangler.toml
# 2. Set secrets: wrangler secret put KEY
# 3. Deploy subgraph to The Graph network
# 4. Update SUBGRAPH_URL in vars section
# ==================================================

name = "dex-backend-serverless"
main = "src/index.ts"
compatibility_date = "2025-06-20"
compatibility_flags = ["nodejs_compat"]

# Replace with your Cloudflare account ID
account_id = "xxxx"

# ‚úÖ Scheduled jobs for data synchronization - Multiple cron triggers
#[triggers]
#crons = [
#    "*/5 * * * *",    # Every 5 minute - Frequent pool sync for blockchain scanning
#    "0 * * * *",      # Every hour - Hourly data updates  
#    "0 2 * * 7"       # Every Sunday at 2 AM - Weekly cleanup (0 = Sunday)
#]

# ‚úÖ Environment variables - Pure GraphQL configuration
[vars]
# Basic configuration
NODE_ENV = "production"

# GraphQL configuration
SUBGRAPH_URL = "http://localhost:8000/subgraphs/name/entysquare/indexer-bnb-testnet"
SUBGRAPH_HEALTH_URL = "http://localhost:8000"

# ‚ö†Ô∏è Sensitive information should use secrets instead of vars
# Run this command to set secret:
# wrangler secret put KEY

# üîß Production AI binding - Enabled for AI functionality
[ai]
binding = "AI"

# üîß Production R2 storage binding - Disabled for initial deployment
# [[r2_buckets]]
# binding = "R2"
# bucket_name = "dex-storage"
# preview_bucket_name = "dex-storage-preview"  # Optional

# üîß Development environment configuration (minimal for testing)
[env.development]
vars = { NODE_ENV = "development", SUBGRAPH_URL = "http://localhost:8000/subgraphs/name/entysquare/indexer-bnb-testnet", SUBGRAPH_HEALTH_URL = "http://localhost:8000" }

# üîß Staging environment configuration
[env.staging]
vars = { NODE_ENV = "staging", SUBGRAPH_URL = "http://localhost:8000/subgraphs/name/entysquare/indexer-bnb-testnet", SUBGRAPH_HEALTH_URL = "http://localhost:8000" }

[env.staging.ai]
binding = "AI"

# [[env.staging.r2_buckets]]
# binding = "R2"
# bucket_name = "dex-storage-staging"

# ‚úÖ Production environment configuration
[env.production]
vars = { NODE_ENV = "production", SUBGRAPH_URL = "http://localhost:8000/subgraphs/name/entysquare/indexer-bnb", SUBGRAPH_HEALTH_URL = "http://localhost:8000" }

[env.production.ai]
binding = "AI"

# [[env.production.r2_buckets]]
# binding = "R2"
# bucket_name = "dex-storage"